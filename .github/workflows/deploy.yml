name: Deploy to Azure VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    # Use the Environment named "azure" so its environment-scoped secrets are available
    environment: azure
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Precheck environment secrets
        shell: bash
        run: |
          [ -n "${{ secrets.VM_HOST }}" ] || (echo "VM_HOST missing in environment"; exit 1)
          [ -n "${{ secrets.VM_USER }}" ] || (echo "VM_USER missing in environment"; exit 1)
          [ -n "${{ secrets.VM_SSH_KEY }}" ] || (echo "VM_SSH_KEY missing in environment"; exit 1)
      - name: SSH to VM and deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -euo pipefail

            # 1) Ensure app folder exists and is owned by the login user
            sudo mkdir -p /opt/notes-app
            sudo chown "$USER":"$USER" /opt/notes-app
            cd /opt/notes-app

            # 2) Get or update the repo
            if [ ! -d .git ]; then
              git clone https://github.com/Waf-DPM-dev/azure-docker-assignment.git .
            else
              git fetch --all
              git reset --hard origin/main
            fi

            # 3) Build & run with compose (frontend + backend + db)
            cd backend

            # Override so the built React app calls the VM API URL
            cat > docker-compose.vm.yml <<EOF
            services:
              frontend:
                build:
                  context: ../frontend
                  args:
                    REACT_APP_API_URL: http://${{ secrets.VM_HOST }}:3001
            EOF

            docker compose -f docker-compose.yml -f docker-compose.vm.yml up -d --build

            # 4) Basic status/health
            docker compose ps
            curl -sS http://localhost:3001/health || true
